// Generated from Analizador.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,15,148,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,
4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,
6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,
10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,5,12,128,
8,12,10,12,12,12,131,9,12,1,13,4,13,134,8,13,11,13,12,13,135,1,14,1,14,1,
15,1,15,1,16,4,16,143,8,16,11,16,12,16,144,1,16,1,16,0,0,17,1,1,3,2,5,3,
7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,0,31,0,33,15,
1,0,3,1,0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,150,0,1,1,0,0,0,0,
3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
0,0,0,0,27,1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,3,42,1,0,0,0,5,51,1,0,0,0,7,
53,1,0,0,0,9,56,1,0,0,0,11,66,1,0,0,0,13,76,1,0,0,0,15,86,1,0,0,0,17,94,
1,0,0,0,19,102,1,0,0,0,21,113,1,0,0,0,23,121,1,0,0,0,25,123,1,0,0,0,27,133,
1,0,0,0,29,137,1,0,0,0,31,139,1,0,0,0,33,142,1,0,0,0,35,36,5,99,0,0,36,37,
5,117,0,0,37,38,5,97,0,0,38,39,5,110,0,0,39,40,5,100,0,0,40,41,5,111,0,0,
41,2,1,0,0,0,42,43,5,101,0,0,43,44,5,110,0,0,44,45,5,116,0,0,45,46,5,111,
0,0,46,47,5,110,0,0,47,48,5,99,0,0,48,49,5,101,0,0,49,50,5,115,0,0,50,4,
1,0,0,0,51,52,5,59,0,0,52,6,1,0,0,0,53,54,5,101,0,0,54,55,5,115,0,0,55,8,
1,0,0,0,56,57,5,109,0,0,57,58,5,97,0,0,58,59,5,121,0,0,59,60,5,111,0,0,60,
61,5,114,0,0,61,62,5,32,0,0,62,63,5,113,0,0,63,64,5,117,0,0,64,65,5,101,
0,0,65,10,1,0,0,0,66,67,5,109,0,0,67,68,5,101,0,0,68,69,5,110,0,0,69,70,
5,111,0,0,70,71,5,114,0,0,71,72,5,32,0,0,72,73,5,113,0,0,73,74,5,117,0,0,
74,75,5,101,0,0,75,12,1,0,0,0,76,77,5,101,0,0,77,78,5,110,0,0,78,79,5,99,
0,0,79,80,5,101,0,0,80,81,5,110,0,0,81,82,5,100,0,0,82,83,5,105,0,0,83,84,
5,100,0,0,84,85,5,111,0,0,85,14,1,0,0,0,86,87,5,97,0,0,87,88,5,112,0,0,88,
89,5,97,0,0,89,90,5,103,0,0,90,91,5,97,0,0,91,92,5,100,0,0,92,93,5,111,0,
0,93,16,1,0,0,0,94,95,5,97,0,0,95,96,5,99,0,0,96,97,5,116,0,0,97,98,5,105,
0,0,98,99,5,118,0,0,99,100,5,97,0,0,100,101,5,114,0,0,101,18,1,0,0,0,102,
103,5,100,0,0,103,104,5,101,0,0,104,105,5,115,0,0,105,106,5,97,0,0,106,107,
5,99,0,0,107,108,5,116,0,0,108,109,5,105,0,0,109,110,5,118,0,0,110,111,5,
97,0,0,111,112,5,114,0,0,112,20,1,0,0,0,113,114,5,97,0,0,114,115,5,106,0,
0,115,116,5,117,0,0,116,117,5,115,0,0,117,118,5,116,0,0,118,119,5,97,0,0,
119,120,5,114,0,0,120,22,1,0,0,0,121,122,5,97,0,0,122,24,1,0,0,0,123,129,
3,31,15,0,124,128,3,31,15,0,125,128,3,29,14,0,126,128,5,95,0,0,127,124,1,
0,0,0,127,125,1,0,0,0,127,126,1,0,0,0,128,131,1,0,0,0,129,127,1,0,0,0,129,
130,1,0,0,0,130,26,1,0,0,0,131,129,1,0,0,0,132,134,3,29,14,0,133,132,1,0,
0,0,134,135,1,0,0,0,135,133,1,0,0,0,135,136,1,0,0,0,136,28,1,0,0,0,137,138,
7,0,0,0,138,30,1,0,0,0,139,140,7,1,0,0,140,32,1,0,0,0,141,143,7,2,0,0,142,
141,1,0,0,0,143,144,1,0,0,0,144,142,1,0,0,0,144,145,1,0,0,0,145,146,1,0,
0,0,146,147,6,16,0,0,147,34,1,0,0,0,5,0,127,129,135,144,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AnalizadorLexer extends antlr4.Lexer {

    static grammarFileName = "Analizador.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'cuando'", "'entonces'", "';'", "'es'", 
                         "'mayor que'", "'menor que'", "'encendido'", "'apagado'", 
                         "'activar'", "'desactivar'", "'ajustar'", "'a'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "IDENTIFICADOR", 
                          "NUMERO", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "IDENTIFICADOR", 
                      "NUMERO", "DIGITO", "LETRA", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

AnalizadorLexer.EOF = antlr4.Token.EOF;
AnalizadorLexer.T__0 = 1;
AnalizadorLexer.T__1 = 2;
AnalizadorLexer.T__2 = 3;
AnalizadorLexer.T__3 = 4;
AnalizadorLexer.T__4 = 5;
AnalizadorLexer.T__5 = 6;
AnalizadorLexer.T__6 = 7;
AnalizadorLexer.T__7 = 8;
AnalizadorLexer.T__8 = 9;
AnalizadorLexer.T__9 = 10;
AnalizadorLexer.T__10 = 11;
AnalizadorLexer.T__11 = 12;
AnalizadorLexer.IDENTIFICADOR = 13;
AnalizadorLexer.NUMERO = 14;
AnalizadorLexer.WS = 15;



